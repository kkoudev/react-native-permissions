{"version":3,"sources":["module.ios.ts"],"names":["RNP","NativeModules","RNPermissions","openSettings","presentLimitedLibraryPicker","check","permission","available","includes","RESULTS","UNAVAILABLE","request","checkNotifications","requestNotifications","options","checkMultiple","permissions","output","dedup","Promise","all","map","requestMultiple","index","length","module"],"mappings":";;;;;;;;;AAAA;;AACA;;AAQA;;AAEA,MAAMA,GAWL,GAAGC,2BAAcC,aAXlB;;AAaA,eAAeC,YAAf,GAA6C;AAC3C,QAAMH,GAAG,CAACG,YAAJ,EAAN;AACD;;AAED,eAAeC,2BAAf,GAA4D;AAC1D,QAAMJ,GAAG,CAACI,2BAAJ,EAAN;AACD;;AAED,eAAeC,KAAf,CAAqBC,UAArB,EAAwE;AACtE,SAAON,GAAG,CAACO,SAAJ,CAAcC,QAAd,CAAuBF,UAAvB,IACHN,GAAG,CAACK,KAAJ,CAAUC,UAAV,CADG,GAEHG,mBAAQC,WAFZ;AAGD;;AAED,eAAeC,OAAf,CAAuBL,UAAvB,EAA0E;AACxE,SAAON,GAAG,CAACO,SAAJ,CAAcC,QAAd,CAAuBF,UAAvB,IACHN,GAAG,CAACW,OAAJ,CAAYL,UAAZ,CADG,GAEHG,mBAAQC,WAFZ;AAGD;;AAEM,SAASE,kBAAT,GAA8D;AACnE,SAAOZ,GAAG,CAACY,kBAAJ,EAAP;AACD;;AAEM,SAASC,oBAAT,CACLC,OADK,EAE2B;AAChC,SAAOd,GAAG,CAACa,oBAAJ,CAAyBC,OAAzB,CAAP;AACD;;AAED,eAAeC,aAAf,CACEC,WADF,EAEgD;AAG9C,QAAMC,MAAuB,GAAG,EAAhC;AACA,QAAMC,KAAK,GAAG,iBAAKF,WAAL,CAAd;AAEA,QAAMG,OAAO,CAACC,GAAR,CACJF,KAAK,CAACG,GAAN,CAAU,MAAOf,UAAP,IAAiC;AACzCW,IAAAA,MAAM,CAACX,UAAD,CAAN,GAAqB,MAAMD,KAAK,CAACC,UAAD,CAAhC;AACD,GAFD,CADI,CAAN;AAMA,SAAOW,MAAP;AACD;;AAED,eAAeK,eAAf,CACEN,WADF,EAEgD;AAG9C,QAAMC,MAAuB,GAAG,EAAhC;AACA,QAAMC,KAAK,GAAG,iBAAKF,WAAL,CAAd;;AAEA,OAAK,IAAIO,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGL,KAAK,CAACM,MAAlC,EAA0CD,KAAK,EAA/C,EAAmD;AACjD,UAAMjB,UAAqB,GAAGY,KAAK,CAACK,KAAD,CAAnC;AACAN,IAAAA,MAAM,CAACX,UAAD,CAAN,GAAqB,MAAMK,OAAO,CAACL,UAAD,CAAlC;AACD;;AAED,SAAOW,MAAP;AACD;;AAEM,MAAMQ,OAAgB,GAAG;AAC9BtB,EAAAA,YAD8B;AAE9BE,EAAAA,KAF8B;AAG9BM,EAAAA,OAH8B;AAI9BC,EAAAA,kBAJ8B;AAK9BC,EAAAA,oBAL8B;AAM9BE,EAAAA,aAN8B;AAO9BO,EAAAA,eAP8B;AAQ9BlB,EAAAA;AAR8B,CAAzB","sourcesContent":["import {NativeModules} from 'react-native';\nimport {RESULTS, PERMISSIONS} from './constants';\nimport {Contract} from './contract';\nimport {\n  NotificationOption,\n  NotificationsResponse,\n  Permission,\n  PermissionStatus,\n} from './types';\nimport {uniq} from './utils';\n\nconst RNP: {\n  available: Permission[];\n\n  checkNotifications: () => Promise<NotificationsResponse>;\n  requestNotifications: (\n    options: NotificationOption[],\n  ) => Promise<NotificationsResponse>;\n  openSettings: () => Promise<true>;\n  presentLimitedLibraryPicker: () => Promise<true>;\n  check: (permission: Permission) => Promise<PermissionStatus>;\n  request: (permission: Permission) => Promise<PermissionStatus>;\n} = NativeModules.RNPermissions;\n\nasync function openSettings(): Promise<void> {\n  await RNP.openSettings();\n}\n\nasync function presentLimitedLibraryPicker(): Promise<void> {\n  await RNP.presentLimitedLibraryPicker();\n}\n\nasync function check(permission: Permission): Promise<PermissionStatus> {\n  return RNP.available.includes(permission)\n    ? RNP.check(permission)\n    : RESULTS.UNAVAILABLE;\n}\n\nasync function request(permission: Permission): Promise<PermissionStatus> {\n  return RNP.available.includes(permission)\n    ? RNP.request(permission)\n    : RESULTS.UNAVAILABLE;\n}\n\nexport function checkNotifications(): Promise<NotificationsResponse> {\n  return RNP.checkNotifications();\n}\n\nexport function requestNotifications(\n  options: NotificationOption[],\n): Promise<NotificationsResponse> {\n  return RNP.requestNotifications(options);\n}\n\nasync function checkMultiple<P extends Permission[]>(\n  permissions: P,\n): Promise<Record<P[number], PermissionStatus>> {\n  type Output = Record<P[number], PermissionStatus>;\n\n  const output: Partial<Output> = {};\n  const dedup = uniq(permissions);\n\n  await Promise.all(\n    dedup.map(async (permission: P[number]) => {\n      output[permission] = await check(permission);\n    }),\n  );\n\n  return output as Output;\n}\n\nasync function requestMultiple<P extends Permission[]>(\n  permissions: P,\n): Promise<Record<P[number], PermissionStatus>> {\n  type Output = Record<P[number], PermissionStatus>;\n\n  const output: Partial<Output> = {};\n  const dedup = uniq(permissions);\n\n  for (let index = 0; index < dedup.length; index++) {\n    const permission: P[number] = dedup[index];\n    output[permission] = await request(permission);\n  }\n\n  return output as Output;\n}\n\nexport const module: Contract = {\n  openSettings,\n  check,\n  request,\n  checkNotifications,\n  requestNotifications,\n  checkMultiple,\n  requestMultiple,\n  presentLimitedLibraryPicker,\n};\n"]}